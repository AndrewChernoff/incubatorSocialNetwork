{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","HOC/withAuthContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialogItem","active","to","name","Message","message","DialogsForm","onSubmit","onSendButtonClick","render","handleSubmit","component","Textarea","placeholder","value","validate","composeValidators","required","maxValue","minValue","Dialogs","state","dialogsComponent","dialogElements","dialogs","map","messageElements","dialogItems","messages","e","text","sendMessage","compose","connect","dispatch","messageText","sendMessageActionCreator","withAuthRedirect","mapStateToPropsForRedirect","isAuth","authPage","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,4B,oGCY7HC,EATI,SAACC,GAChB,IAAIC,EAAO,SAAWD,EAAME,GAC5B,OACI,qBAAKC,UAAS,UAAKC,IAAEC,WAAP,YAAqBD,IAAEE,QAArC,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCGvBC,EARC,SAACT,GACb,OACI,qBAAKG,UAAWC,IAAEM,QAAlB,SACKV,EAAMU,W,wBCsCbC,EAAc,SAACX,GACjB,OACI,cAAC,IAAD,CACIY,SAAUZ,EAAMa,kBAEhBC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACJ,sBAAMH,SAAUG,EAAhB,SACI,gCACI,cAAC,IAAD,CAAOP,KAAM,OAAQQ,UAAWC,IAAUC,YAAa,qBAAsBC,MAAO,QAChFC,SAAUC,YAAkBC,IAAUC,YAAS,IAAKC,YAAS,MACjE,mDAOTC,EApDC,SAACzB,GACb,IAAI0B,EAAQ1B,EAAM2B,iBACdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAD,GAAO,OAAI,cAAC,EAAD,CAA6BrB,KAAMqB,EAAQrB,KAAMN,GAAI2B,EAAQ3B,IAA5C2B,EAAQ3B,OACvE6B,EAAkBL,EAAMhB,QAAQoB,KAAI,SAAApB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQR,OAYnG,OACI,8BACI,sBAAKC,UAAWC,IAAEyB,QAAlB,UACI,qBAAK1B,UAAWC,IAAE4B,YAAlB,SACKJ,IAGL,sBAAKzB,UAAWC,IAAE6B,SAAlB,UACKF,EACD,8BACI,8BACI,cAAC,EAAD,CAAalB,kBArBb,SAACqB,GAErB,IAAIC,EAAOD,EAAEC,KACbnC,EAAMoC,YAAYD,GAClBD,EAAEC,KAAO,mB,gBCEFE,sBACXC,aAfkB,SAACZ,GACnB,MAAO,CACHC,iBAAkBD,EAAMC,qBAIP,SAACY,GACtB,MAAO,CACHH,YAAa,SAACI,GACVD,EAASE,YAAyBD,SAO1CE,IAFWL,CAGZZ,I,mJCnBCkB,EAA6B,SAACjB,GAC9B,MAAO,CACHkB,OAAQlB,EAAMmB,SAASD,SAIlBF,EAAmB,SAACI,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKhD,MAAM4C,OAEZ,cAACE,EAAD,eAAeE,KAAKhD,QAFO,cAAC,IAAD,CAAUO,GAAG,eAHT,GACX0C,IAAMH,WAWtC,OAFqCR,YAAQK,EAARL,CAAqCS","file":"static/js/5.246b32a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3sSc3\",\"dialogItems\":\"Dialogs_dialogItems__3TdpS\",\"active\":\"Dialogs_active__24AEF\",\"messages\":\"Dialogs_messages__4jTCe\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = /dialog/ + props.id;\r\n    return (\r\n        <div className={`${s.dialogItem} ${s.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, Form } from 'react-final-form';\r\nimport { maxValue, minValue, required, composeValidators } from '../../Validate/validator';\r\nimport { Textarea } from '../../Validate/FormsControl';\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsComponent;\r\n    let dialogElements = state.dialogs.map(dialogs => <DialogItem key={dialogs.id} name={dialogs.name} id={dialogs.id} />);\r\n    let messageElements = state.message.map(message => <Message message={message.message} key={message.id} />);\r\n\r\n    let onSendButtonClick = (e) => {\r\n\r\n        let text = e.text;\r\n        props.sendMessage(text);\r\n        e.text = ''\r\n    }\r\n\r\n    //if (!props.isAuth) return <Redirect to='/login' />\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogItems}>\r\n                    {dialogElements}\r\n                </div>\r\n\r\n                <div className={s.messages}>\r\n                    {messageElements}\r\n                    <div>\r\n                        <div>\r\n                            <DialogsForm onSendButtonClick={onSendButtonClick} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <Form\r\n            onSubmit={props.onSendButtonClick}\r\n\r\n            render={({ handleSubmit }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field name={'text'} component={Textarea} placeholder={\"Enter your message\"} value={'hello'}\r\n                            validate={composeValidators(required, maxValue(50), minValue(1))} />\r\n                        <button>Send</button>\r\n                    </div>\r\n                </form>)} />\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { sendMessageActionCreator } from '../../redux/dialogReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../HOC/withAuthContainer';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return { \r\n        dialogsComponent: state.dialogsComponent,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (messageText) => {\r\n            dispatch(sendMessageActionCreator(messageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose ( \r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.authPage.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return (\r\n                <Component {...this.props} />\r\n            )\r\n        }        \r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n"],"sourceRoot":""}